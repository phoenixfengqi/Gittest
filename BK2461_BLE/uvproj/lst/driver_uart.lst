C51 COMPILER V9.60.0.0   DRIVER_UART                                                       12/28/2020 20:25:08 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DRIVER_UART
OBJECT MODULE PLACED IN .\driver_uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\src\driver_uart.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\lst\driver_uart.lst) TABS(2) OBJECT(.\driver_uart.obj)

line level    source

   1          #include "patches.h"
   2          #include "driver_uart.h"
   3          #include <stdarg.h>
   4          #include <stdio.h>
   5          #include <string.h>
   6          
   7          unsigned char S_CMD[CMD_LEN] = {0};
   8          unsigned char B_CmdOK = 0;
   9          unsigned char N_CmdLen = 0;
  10          
  11          
  12          #if UART_ENABLE
  13          void UartConfig(uint16 baud)
  14          {
  15   1          uint16 tmp;
  16   1      
  17   1          //CLK_EN_CFG = 0xFF;                  //打开UART时钟使能和Timer 的clk
  18   1          CLK_EN_CFG  |= BIT(5);  
  19   1          //CLK_EN_CFG |= (BIT(5)|BIT(6));
  20   1          PALT1_SETB(BIT(2));
  21   1          //PALT1 = 0x04;                       //打开I/O第二功能
  22   1          PCON2 = 0x080;                       //波特率不加倍
  23   1          SCON0 = 0x50;                       //配置串口为模式1
  24   1          T2CON = 0x30;                       //RX和TX的波特率生成器都为Timer2
  25   1      
  26   1          tmp = 65536 - ( SYS_CLOCK/32 ) / baud;  //计算T2重载值
  27   1          RCAP2H = (tmp >> 8);
  28   1          RCAP2L = tmp & 0xFF;
  29   1          TH2 = RCAP2H;
  30   1          TL2 = RCAP2L;
  31   1          //EA = 1;                           //不启用UART中断
  32   1          ES0 = 1;
  33   1          TR2 = 1;                            //启动Timer2
  34   1      
  35   1      //    StdioFuncConfig();
  36   1      }
  37          
  38          //void StdioFuncConfig()
  39          //{
  40          //    TI = 1;                            //TI:  Set TI to send first char of UART. For using printf, putch
             -ar
  41          //}
  42          
  43          void Close_Uart(void)
  44          {
  45   1          PALT1 &= (~0x04); 
  46   1          ES0 = 0;
  47   1          TR2 = 0; 
  48   1      }
  49          
  50          void update_str(char *str){
  51   1          uint8 i = 0;
  52   1          uint8 len = strlen(str);
  53   1          if(len >= 16) len = 16;
C51 COMPILER V9.60.0.0   DRIVER_UART                                                       12/28/2020 20:25:08 PAGE 2   

  54   1          
  55   1          while(len--){
  56   2              uart_data_send[i] = *str++;
  57   2              i++;
  58   2          }
  59   1      }
  60          
  61          void driver_uart_send_start(uint8 len)
  62          {
  63   1          uart_data_len_send = len;
  64   1          if(uart_data_len_send--)
  65   1          {
  66   2              uart_data_count_send = 0;
  67   2              SBUF0 = uart_data_send[uart_data_count_send++];
  68   2          }
  69   1      }
  70          
  71          #ifdef LOG_DEBUG
  72          void loginfo(char *str){
  73   1       #if 1
  74   1          memset(uart_data_send, 0, 16);
  75   1          update_str(str);
  76   1          driver_uart_send_start(strlen(str));
  77   1          WaitUs(1000);
  78   1      #endif    
  79   1      }
  80          
  81          void logvalue(uint8 type,uint8 value1,uint8 value2){
  82   1          if(value2){
  83   2              memset(uart_data_send, 0, 16);
  84   2              uart_data_send[0] = 0xff;
  85   2              uart_data_send[1] = type;
  86   2              uart_data_send[2] = value1;
  87   2              uart_data_send[3] = value2;
  88   2              uart_data_send[4] = 0xff;
  89   2              driver_uart_send_start(5);
  90   2              WaitUs(1000);
  91   2          }
  92   1      }
  93          #endif
  94          
  95          #endif
  96          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    329    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     34      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
